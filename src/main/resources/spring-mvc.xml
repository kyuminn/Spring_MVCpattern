<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans.xsd
	http://www.springframework.org/schema/mvc
	http://www.springframework.org/schema/mvc/spring-mvc.xsd
	http://www.springframework.org/schema/context
	http://www.springframework.org/schema/context/spring-context.xsd">
	
	<!--  java 코드에 선언한 스프링 어노테이션을 읽어들일 수 있게 하는 태그! -->
	<mvc:annotation-driven/>
	
	<mvc:view-controller path="/main" view-name="main"/>
	
	<!-- @controller 들이 반환하는 String 타입의 문자열을 읽어서, views 안의 jsp 파일로 응답할 수 있게 해주는 태그 -->
	<mvc:view-resolvers>
		<mvc:jsp prefix="/WEB-INF/views/" suffix=".jsp"/>
	</mvc:view-resolvers>
	
	<!-- label.properties 읽어들이기 -->
	<bean id="messageSource" class="org.springframework.context.support.ResourceBundleMessageSource">
		<property name="basenames">
			<list>
				<value>message.label</value>
			</list>
		</property>
		<property name="defaultEncoding" value="UTF-8"></property>
	</bean>
	
	<mvc:default-servlet-handler/>
	
	<mvc:interceptors>
		<mvc:interceptor>
			<mvc:mapping path="/edit/**"/> <!-- edit 하위 경로 모두 -->
			<mvc:exclude-mapping path="/edit/help/**"/> <!-- 제외하고 싶은 경로 있을 때 추가하는 방법 -->
			<bean class="interceptor.AuthCheckInterceptor"/>
		</mvc:interceptor>
	</mvc:interceptors>
	
	<!--xml의 bean 생성 태그를 모두  지우고 (내가 정의한 클래스에 대해서만) 이 태그 추가하기!!
	필요한 dataSource, message는 지우지 말 것
	이 태그를 사용하면 @Component를 상속하는( @Controller, @Repository, @Service) 어노테이션 붙은 클래스에 대해 자동으로 객체 생성!!
	단, base-package에 하위에 있는 모든 클래스에 한정
	이후에 각 클래스에 알맞은 어노테이션 @ 추가해주기!
	  -->
	<context:component-scan base-package="controller"></context:component-scan>
	<context:component-scan base-package="member"></context:component-scan>
</beans>